name: Deploy PR previews

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  deployments: write

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

env:
  PAGE_DIR: pr-preview-${{ github.event.pull_request.number }}

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          generator_config_file: next.config.mjs
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-
      - name: Install dependencies
        run: bun install
      - name: Build with Next.js
        run: |
          export IS_PREVIEW=true
          export PR_NUMBER=${{ github.event.pull_request.number }}
          bunx next build
      - name: Upload artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
      - name: Create a version mark
        run: touch ./out/${{ github.sha }}.txt
      - name: "[Debug]"
        run: |
          echo ${{ steps.upload.outputs.artifact_id }}
          pwd
          ls -la

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # - name: Create deployment
      #   uses: bobheadxi/deployments@v1
      #   id: deployment
      #   with:
      #     step: start
      #     env: PR-${{ env.BRANCH_NAME }}

      - name: Download artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: github-pages-${{ github.sha }}
      - name: "[Debug]"
        run: |
          pwd
          ls -la
          cd ${{ steps.download.outputs.download-path }}
          ls -la
          cd ..
      - name: Extract artifact
        run: |
          mkdir -p ./out
          tar -xvf ${{ steps.download.outputs.download-path }}/artifact.tar -C ./out
      - name: "[Debug]"
        run: |
          pwd
          ls -la ./out
      - name: Pushing to pages branch
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./out
          branch: gh-pages
          target-folder: ${{ env.PAGE_DIR }}
          clean: true

      # - name: Update deployment status
      #   uses: bobheadxi/deployments@v1
      #   if: always()
      #   with:
      #     step: finish
      #     status: ${{ job.status }}
      #     env: ${{ steps.deployment.outputs.env }}
      #     deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      #     env_url: https://${{ github.repository_owner }}.github.io/${{ env.PAGE_DIR }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview deployed to: https://${context.repo.owner}.github.io/${process.env.PAGE_DIR}`
            })
